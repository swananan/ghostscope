name: Release Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - name: Use GHCR base image (pinned digest)
      run: |
        set -euo pipefail
        IMAGE="ghcr.io/swananan/ghostscope-build@sha256:3f0f6184919e7527bb6c74e897f650e672809e5cbfecb6f70c775da851ea99e0"
        docker pull "$IMAGE" >/dev/null
        echo "Using GHCR base image (pinned digest): $IMAGE"
        echo "BASE_IMAGE=$IMAGE" >> "$GITHUB_ENV"

    - name: Verify LLVM in container (no libffi)
      run: |
        docker run --rm \
          -v "${{ github.workspace }}:/workspace" \
          -w /workspace \
          "${BASE_IMAGE}" bash -lc '
            echo "llvm-config version:" && llvm-config --version && \
            echo "Checking libLLVM for libffi dependency (should be none)..." && \
            (ldd "$(llvm-config --libdir)"/libLLVM* | grep -i ffi && exit 1 || echo "OK: no libffi referenced")
          '

    - name: Build release inside container
      run: |
        docker run --rm \
          -v "${{ github.workspace }}:/workspace" \
          -w /workspace \
          "${BASE_IMAGE}" \
          bash -lc 'export LLVM_SYS_181_PREFIX=/opt/llvm-18; export LLVM_CONFIG_PATH=/opt/llvm-18/bin/llvm-config; export RUSTFLAGS="-C link-arg=-Wl,--as-needed"; rustup show; llvm-config --version; echo "llvm-config system-libs:"; llvm-config --system-libs; cargo clean; cargo build --release'

    - name: Check glibc dependency
      run: |
        echo "=== Required glibc versions (from binary) ==="
        objdump -T ./target/release/ghostscope | grep GLIBC | sed 's/.*GLIBC_\([.0-9]*\).*/\1/g' | sort -Vu
        echo "=== Binary info ==="
        file ./target/release/ghostscope
        ls -lh ./target/release/ghostscope

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ghostscope-x86_64-linux-gnu
        path: target/release/ghostscope
